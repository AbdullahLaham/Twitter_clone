import axios from 'axios';
import Head from 'next/head';
import { useRouter } from 'next/router';
// import  Input  from '../../components/Input';
import React from 'react'
import { useState } from 'react';
import { useContext } from 'react';
import { useEffect } from 'react';
import { BsStars } from 'react-icons/bs';
import CommentSection from '../../components/CommentSection';
import Sidebar from '../../components/Sidebar';
import Widgets from '../../components/Widgets';
import { Store } from '../../store';
import styles from '../../styles/Home.module.css'
import {HiOutlineArrowNarrowLeft} from 'react-icons/hi';
import Link from 'next/link';
import { collection, doc, onSnapshot, orderBy, query } from 'firebase/firestore';
import { db } from '../../firebase';
import Post from '../../components/Post';
import { comment } from 'postcss';
import Comment from '../../components/Comment';
const PostPage = ({newNews, randomUsers}) => { 
  // router
  const router = useRouter();
  const {id} = router.query; 
  const {dispatch, state} = useContext(Store);
  const [currentUser, setCurrentUser] = useState({});
  const [post, setPost] = useState(null);
  const [comments, setComments] = useState([]);
  useEffect(() => {
    if (!localStorage.getItem('user')) router.push('/auth/signin', {replace: true},);
    setCurrentUser(state.user);
  }, [])

  
  useEffect(() => {
    const unsubscribe = onSnapshot(doc(db, "posts", id), (snapshot) => {
      setPost(snapshot);
      console.log('ssssss', snapshot.data())
    });
    
  }, [db, id, router])
  // get comments of the post
  useEffect(() => {
    const unsubscribe = onSnapshot(query(collection(db, "posts", id,  "comment"), orderBy('timestamp', 'desc')), (snapshot) => {
      setComments(snapshot.docs);
      console.log('docs', snapshot.docs)
    } )
  }, [db, id])
  return (
    <div  className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=' min-h-screen max-w-[100%] mx-auto flex'>
        <Sidebar />
        <div className='xl:ml-[16rem] border-l border-r xl:min-w-[42rem] sm:ml-[73px] flex-grow max-w-xl h-[100vh] '>
        <div className='flex justify-start items-center gap-2 p-[.7rem] sticky top-0 z-50 bg-white border-b border-gray-200 '>
          
          <Link href="/" className='hoverAnimation flex items-center justify-center cursor-pointer ml-auto'>
              <HiOutlineArrowNarrowLeft className='text-3xl hoverAnimation cursor-pointer p-[.1rem]' />
          </Link>  
          <p className='font-bold text-3xl sm:text-xl cursor-pointer '>Tweet</p>
          
        </div>
        {post && <Post post={post}/>}
        {comments.map((comment) => <Comment id={post.id} commentId={comment.id} comment={comment.data()} userId={currentUser?._id} />)}
    </div>   
        <Widgets newNews={newNews} randomUsers={randomUsers} />
        {/* CommentSection */}
        <CommentSection />
      </main>
    </div>
  )
}

export default PostPage
export const getServerSideProps = async () => {
    const newNews = await axios.get('https://saurav.tech/NewsAPI/top-headlines/category/business/in.json')
    // who to follow section
    const randomUsers = await axios.get('https://randomuser.me/api/?results=30&inc=name,login,picture')
  
    return {
      props: {
        newNews: newNews?.data?.articles,
        randomUsers: randomUsers?.data?.results,
      },
  
    }
  }